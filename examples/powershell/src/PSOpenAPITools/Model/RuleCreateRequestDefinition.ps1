#
# ESET Enterprise Inspector
# ESET Enterprise Inspector REST API definition
# Version: 1.6-oas3
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Ancestor
No description available.
.PARAMETER Parentprocess
No description available.
.PARAMETER VarProcess
No description available.
.PARAMETER Operations
No description available.
.OUTPUTS

RuleCreateRequestDefinition<PSCustomObject>
#>

function Initialize-RuleCreateRequestDefinition {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Ancestor},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Parentprocess},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${VarProcess},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Operations}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => RuleCreateRequestDefinition' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "ancestor" = ${Ancestor}
            "parentprocess" = ${Parentprocess}
            "process" = ${VarProcess}
            "operations" = ${Operations}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RuleCreateRequestDefinition<PSCustomObject>

.DESCRIPTION

Convert from JSON to RuleCreateRequestDefinition<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RuleCreateRequestDefinition<PSCustomObject>
#>
function ConvertFrom-JsonToRuleCreateRequestDefinition {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => RuleCreateRequestDefinition' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RuleCreateRequestDefinition
        $AllProperties = ("ancestor", "parentprocess", "process", "operations")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ancestor"))) { #optional property not found
            $Ancestor = $null
        } else {
            $Ancestor = $JsonParameters.PSobject.Properties["ancestor"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentprocess"))) { #optional property not found
            $Parentprocess = $null
        } else {
            $Parentprocess = $JsonParameters.PSobject.Properties["parentprocess"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "process"))) { #optional property not found
            $VarProcess = $null
        } else {
            $VarProcess = $JsonParameters.PSobject.Properties["process"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operations"))) { #optional property not found
            $Operations = $null
        } else {
            $Operations = $JsonParameters.PSobject.Properties["operations"].value
        }

        $PSO = [PSCustomObject]@{
            "ancestor" = ${Ancestor}
            "parentprocess" = ${Parentprocess}
            "process" = ${VarProcess}
            "operations" = ${Operations}
        }

        return $PSO
    }

}

