/**
 * ESET Enterprise Inspector
 * ESET Enterprise Inspector REST API definition
 *
 * The version of the OpenAPI document: 1.6-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExecutableBlockRequest from '../model/ExecutableBlockRequest';
import ExecutableUnblockRequest from '../model/ExecutableUnblockRequest';
import UnauthorizedError from '../model/UnauthorizedError';

/**
* Remediation service.
* @module api/RemediationApi
* @version 1.6-oas3
*/
export default class RemediationApi {

    /**
    * Constructs a new RemediationApi. 
    * @alias module:api/RemediationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the blockExecutable operation.
     * @callback module:api/RemediationApi~blockExecutableCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Block an executable
     * @param {String} id ID or SHA1
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.idType if $idType=sha1 {id} in URL is interpreted as SHA1
     * @param {module:model/ExecutableBlockRequest} opts.executableBlockRequest 
     * @param {module:api/RemediationApi~blockExecutableCallback} callback The callback function, accepting three arguments: error, data, response
     */
    blockExecutable(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['executableBlockRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling blockExecutable");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        '$idType': opts['idType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/executables/{id}/block', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the unblockExecutable operation.
     * @callback module:api/RemediationApi~unblockExecutableCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unblock an executable
     * @param {String} id ID or SHA1
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.idType if $idType=sha1 {id} in URL is interpreted as SHA1
     * @param {module:model/ExecutableUnblockRequest} opts.executableUnblockRequest 
     * @param {module:api/RemediationApi~unblockExecutableCallback} callback The callback function, accepting three arguments: error, data, response
     */
    unblockExecutable(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['executableUnblockRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling unblockExecutable");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        '$idType': opts['idType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/executables/{id}/unblock', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
